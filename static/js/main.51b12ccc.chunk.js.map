{"version":3,"sources":["core/firebase.js","components/Auth/Login.js","context/auth-context/auth-context.js","core/setToFBFunctions/setDefaultFoldersToFB.js","components/Auth/Auth.js","components/Nav/Nav.js","core/listOfStatuses.js","components/Main/CreateNewProject/CreateNewProject.js","core/getCurrentCommentTime.js","components/Main/Comments/Comments.js","components/Main/Projects/DeleteProjectModal.js","components/Main/StatusSelector.js","components/Main/Projects/Project.js","components/Main/Projects/ListOfProjects.js","context/projects-context/projects-context.js","core/getFromFBFunctions/fetchProjectsAllIdsFromFB.js","core/getFromFBFunctions/fetchProjectsByIdsFromFB.js","core/setToFBFunctions/setProjectsAllIdsToFB.js","core/setToFBFunctions/setProjectsByIdsToFB.js","components/Main/Main.js","context/projects-context/projects-actions.js","context/projects-context/projectsAllIds-reducer.js","core/deleteSelectedProjectFromList.js","context/projects-context/projectsById-reducer.js","context/projects-context/ProjectsState.js","App.js","context/auth-context/auth-actions.js","context/auth-context/auth-reducer.js","context/auth-context/AuthState.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","firestore","Login","hasAccount","setHasAccount","setEmail","setPassword","emailError","passwordError","handleSignUp","handleLogin","className","placeholder","type","onChange","event","target","value","onClick","authContext","createContext","setDefaultFoldersToFB","userId","collection","doc","set","Auth","useState","email","password","setEmailError","setPasswordError","useContext","AuthContext","setLoggedInUser","logoutUser","clearErrors","useEffect","auth","onAuthStateChanged","user","uid","createUserWithEmailAndPassword","then","result","catch","err","code","message","signInWithEmailAndPassword","Nav","createNewProject","setCreateNewProject","setUser","signOut","listOfStatuses","CreateNewProject","handleAddProjectToListSubmit","title","setTitle","description","setDescription","status","setStatus","dateCreated","setDateCreated","estimatedLevelOfEfford","setEstimatedLevelOfEfford","currentLevelOfEfford","setCurrentLevelOfEfford","submitUserInputs","preventDefault","Math","floor","random","comments","onSubmit","map","rows","cols","getCurrentCommentTime","Date","toISOString","slice","replace","Comments","projectInfo","setNewCommentInProjectInput","addNewCommentToProject","showComments","setShowComments","arrowClasses","classNames","commentsOpened","Object","entries","CommentsArr","DeleteProjectModal","setShowDeleteModal","handleDeleteProjectClick","StatusSelector","setNewProjectStatus","Project","project","projectsById","handleUpdateProject","changeProjectStatus","setChangeProjectStatus","showDeleteModal","newProjectStatus","newCommentInProjectInput","handleUpdateProjectStatus","useCallback","projectCopy","projectStatusClasses","completed","stopped","started","actualEffortClasses","lowEffort","highEffort","commentTime","ListOfProjects","projectAllIds","projectsContext","fetchProjectsAllIds","fetchProjectsById","setProjectsAllIdsToFB","projectsAllIdsList","setProjectsByIdToFB","listOfProjectsById","Main","projectsAllIds","setProjectsAllIdsFromFBtoState","setProjectsByIdFromFBtoState","addProjectToState","deleteProject","updateProject","onSnapshot","data","length","updatedProject","SET_PROJECTS_FROM_FB","ADD_NEW_PROJECT","DELETE_PROJECT","projectsAllIdsReducer","state","action","payload","filter","deleteSelectedJobInfoFromList","projectsList","keys","reduce","obj","key","projectsByIdReducer","projectsByIdCopy","ProjectsState","props","useReducer","dispatchProjectsById","dispatchProjectsAllIds","Provider","projectsIds","children","App","SET_LOGGEDIN_USER","LOGOUT_USER","authReducer","AuthState","dispatch","ReactDOM","render","document","getElementById"],"mappings":"mXAcaA,G,YAAOC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,iDACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,+CAOMC,EAFET,IAASU,YC4CXC,G,MAzDD,SAAC,GASR,IARLC,EAQI,EARJA,WACAC,EAOI,EAPJA,cACAC,EAMI,EANJA,SACAC,EAKI,EALJA,YACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,aACAC,EACI,EADJA,YAEA,OACE,qBAAKC,UAAU,aAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,QAAf,UACGR,EAAa,yCAAmB,yCAEjC,uBACES,YAAY,QACZC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAWV,EAASU,EAAMC,OAAOC,UAE5CV,GAAc,oDAEf,uBACEK,YAAY,WACZC,KAAK,WACLC,SAAU,SAACC,GAAD,OAAWT,EAAYS,EAAMC,OAAOC,UAE/CT,GAAiB,uDAEjBL,EACC,sBAAKQ,UAAU,mBAAf,UACE,qBAAKA,UAAU,gBAAgBO,QAAS,kBAAMR,KAA9C,qBAGA,sBAAKC,UAAU,cAAf,UACE,wDACA,qBAAKO,QAAS,kBAAMd,GAAc,IAAlC,4BAIJ,sBAAKO,UAAU,mBAAf,UACE,qBAAKA,UAAU,gBAAgBO,QAAS,kBAAMT,KAA9C,qBAGA,sBAAKE,UAAU,cAAf,UACE,wDACA,qBAAKO,QAAS,kBAAMd,GAAc,IAAlC,qCC9CDe,EAFKC,0BCeLC,EAfe,SAACC,GAC7BtB,EACGuB,WAAW,SACXC,IAAIF,GACJC,WAAW,YACXC,IAAI,gBACJC,IAAI,IACPzB,EACGuB,WAAW,SACXC,IAAIF,GACJC,WAAW,YACXC,IAAI,kBACJC,IAAI,KCwFMC,EAhGF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHvB,EADG,OAEesB,mBAAS,IAFxB,mBAEVE,EAFU,KAEAvB,EAFA,OAGmBqB,mBAAS,IAH5B,mBAGVpB,EAHU,KAGEuB,EAHF,OAIyBH,mBAAS,IAJlC,mBAIVnB,EAJU,KAIKuB,EAJL,OAMmBJ,oBAAS,GAN5B,mBAMVxB,EANU,KAMEC,EANF,OAQuB4B,qBAAWC,GAA3CC,EARS,EAQTA,gBAAiBC,EARR,EAQQA,WAOnBC,EAAc,WAClBN,EAAc,IACdC,EAAiB,KAiEnB,OAhBAM,qBAAU,WAaR,OAZ4B/C,EAAKgD,OAAOC,oBAAmB,SAACC,GACtDA,GAzDNnC,EAAS,IACTC,EAAY,IA0DR4B,EAAgB,CACdN,MAAOY,EAAKZ,MACZa,IAAKD,EAAKC,OAGZN,SAKH,CAACD,EAAiBC,IAGnB,cAAC,EAAD,CACEhC,WAAYA,EACZC,cAAeA,EACfC,SAAUA,EACVC,YAAaA,EACbG,aA9CiB,WACnB2B,IACA9C,EACGgD,OAEAI,+BAA+Bd,EAAOC,GACtCc,MAAK,SAACC,GACLvB,EAAsBuB,EAAOJ,KAAKC,QAEnCI,OAAM,SAACC,GACN,OAAQA,EAAIC,MACV,IAAK,4BACL,IAAK,qBACHjB,EAAcgB,EAAIE,SAClB,MACF,IAAK,qBACHjB,EAAiBe,EAAIE,SACrB,MACF,QACE,YA4BNtC,YArEgB,WAClB0B,IACA9C,EACGgD,OACAW,2BAA2BrB,EAAOC,GAElCgB,OAAM,SAACC,GACN,OAAQA,EAAIC,MACV,IAAK,qBACL,IAAK,qBACL,IAAK,sBACHjB,EAAcgB,EAAIE,SAClB,MACF,IAAK,sBACHjB,EAAiBe,EAAIE,SACrB,MACF,QACE,YAqDNzC,WAAYA,EACZC,cAAeA,KCjEN0C,G,MA3BH,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,iBAAkBC,EAAmC,EAAnCA,oBACvBjB,GAD0D,EAAdkB,QAC7BrB,qBAAWC,GAA1BE,YAMR,OACE,sBAAKxB,UAAU,MAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,mDACA,qBACEA,UAAU,sBACVO,QAAS,kBAAMkC,GAAqBD,IAFtC,4BAOF,qBAAKxC,UAAU,sBAAf,SACE,qBAAKA,UAAU,iBAAiBO,QAhBjB,WACnB5B,EAAKgD,OAAOgB,UACZnB,KAcI,2BCxBKoB,G,MAAiB,CAAC,UAAW,UAAW,UAAW,cCwGjDC,EApGU,SAAC,GAGnB,IAFLC,EAEI,EAFJA,6BACAL,EACI,EADJA,oBACI,EACsBzB,mBAAS,IAD/B,mBACG+B,EADH,KACUC,EADV,OAEkChC,mBAAS,IAF3C,mBAEGiC,EAFH,KAEgBC,EAFhB,OAGwBlC,mBAAS,IAHjC,mBAGGmC,EAHH,KAGWC,EAHX,OAIkCpC,mBAAS,MAJ3C,mBAIGqC,EAJH,KAIgBC,EAJhB,OAKwDtC,mBAAS,MALjE,mBAKGuC,EALH,KAK2BC,EAL3B,OAMoDxC,mBAAS,MAN7D,mBAMGyC,EANH,KAMyBC,EANzB,KAiBEC,EAAmB,SAACvD,GACxBA,EAAMwD,iBACN,IAAM3E,EAAY4E,KAAKC,MAAsB,IAAhBD,KAAKE,UAWlCjB,EAVmB,CACjBC,QACAE,cACAE,SACAE,cACAE,yBACAE,uBACAxE,YACA+E,SAAU,KAnBZhB,EAAS,IACTE,EAAe,IACfE,EAAU,IACVE,EAAe,MACfE,EAA0B,MAC1BE,EAAwB,MAkBxBjB,GAAoB,IAEtB,OACE,sBAAKzC,UAAU,2BAAf,UACE,oDAEA,uBACEA,UAAU,sBACViE,SAAU,SAAC7D,GAAD,OAAWuD,EAAiBvD,EAAMC,OAAOC,QAFrD,UAIE,sBAAKN,UAAU,mBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,uBACEA,UAAU,uBACVC,YAAY,QACZE,SAAU,SAACC,GAAD,OAAW4C,EAAS5C,EAAMC,OAAOC,UAE7C,uBACEN,UAAU,uBACVE,KAAK,OACLC,SAAU,SAACC,GAAD,OAAWkD,EAAelD,EAAMC,OAAOC,UAEnD,uBACEN,UAAU,uBACVC,YAAY,mBACZC,KAAK,SACLC,SAAU,SAACC,GAAD,OACRoD,EAA0BpD,EAAMC,OAAOC,UAG3C,uBACEN,UAAU,uBACVC,YAAY,iBACZC,KAAK,SACLC,SAAU,SAACC,GAAD,OAAWsD,EAAwBtD,EAAMC,OAAOC,UAE5D,yBACEN,UAAU,WACVG,SAAU,SAACC,GAAD,OAAWgD,EAAUhD,EAAMC,OAAOC,QAF9C,UAIE,wBAAQA,MAAM,GAAd,mCACCsC,EAAesB,KAAI,SAACf,GAAD,OAClB,wBAAyB7C,MAAO6C,EAAhC,SACGA,GADUA,EAAS,YAM5B,qBAAKnD,UAAU,oBAAf,SACE,0BACEmE,KAAK,KACLC,KAAK,KACLnE,YAAY,cACZE,SAAU,SAACC,GAAD,OAAW8C,EAAe9C,EAAMC,OAAOC,eAIvD,qBAAKN,UAAU,iBAAiBO,QAASoD,EAAzC,2B,iCCxFOU,EARe,WAC5B,OAAO,IAAIC,MACRC,cACAC,MAAM,EAAG,IACTC,QAAQ,KAAM,KACdA,QAAQ,IAAK,MCqEHC,G,MAtEE,SAAC,GAIX,IAHLC,EAGI,EAHJA,YACAC,EAEI,EAFJA,4BACAC,EACI,EADJA,uBACI,EACoC7D,oBAAS,GAD7C,mBACG8D,EADH,KACiBC,EADjB,KAGEC,EAAeC,IACnB,qBACA,MACA,kBACA,CACEC,eAAgBJ,IAIhBd,EAAWmB,OAAOC,QAAQT,EAAYX,UAAUE,KAAI,SAACmB,GACvD,OACE,sBAAKrF,UAAU,eAAf,UACE,qBAAKA,UAAU,eAAf,SACE,4BAAIqF,EAAY,OAElB,qBAAKrF,UAAU,eAAf,SACE,4BAAIqF,EAAY,SALeA,EAAY,OAWnD,OACE,sBAAKrF,UAAU,6BAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,0CACA,qBACEA,UAAU,qBACVO,QAAS,kBAAMwE,GAAiBD,IAFlC,SAIE,mBAAG9E,UAAWgF,SAGjBF,GACC,sBAAK9E,UAAU,mBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,sCACA,6CAGDgE,EAED,sBAAKhE,UAAU,oBAAf,UACE,uBACEE,KAAK,OACLD,YAAY,uBACZE,SAAU,SAACC,GAAD,OACRwE,EAA4BxE,EAAMC,OAAOC,UAG7C,qBACEN,UAAU,uBACVO,QAASsE,EAFX,oCChCGS,G,MA1BY,SAAC,GAIrB,IAHLC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,yBACAb,EACI,EADJA,YAEA,OACE,qBAAK3E,UAAU,eAAf,SACE,sBAAKA,UAAU,eAAf,UACE,gEAAmC2E,EAAY5B,MAA/C,OACA,sBAAK/C,UAAU,wBAAf,UACE,sBACEO,QAAS,kBAAMiF,EAAyBb,IACxC3E,UAAU,cAFZ,UAIG,IAJH,MAKM,OAEN,qBAAKO,QAAS,kBAAMgF,GAAmB,IAAQvF,UAAU,aAAzD,0BCDKyF,EAhBQ,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACxB,OACE,qBAAK1F,UAAU,kBAAf,SACG4C,EAAesB,KAAI,SAACf,GAAD,OAClB,qBACEnD,UAAU,iBACVO,QAAS,kBAAMmF,EAAoBvC,IAFrC,SAKGA,GAFIA,SCqHAwC,EAtHC,SAAC,GAKV,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,oBACAN,EACI,EADJA,yBACI,EACkDxE,oBAAS,GAD3D,mBACG+E,EADH,KACwBC,EADxB,OAE0ChF,oBAAS,GAFnD,mBAEGiF,EAFH,KAEoBV,EAFpB,OAG4CvE,mBAAS,IAHrD,mBAGGkF,EAHH,KAGqBR,EAHrB,OAI4D1E,mBAAS,IAJrE,mBAIGmF,EAJH,KAI6BvB,EAJ7B,KAMI/C,EAASR,qBAAWC,GAApBO,KAEF8C,EAAckB,EAAaD,GAE3BQ,EAA4BC,uBAAY,WAC5C,IAAIC,EAAW,eAAQ3B,GACvB2B,EAAYnD,OAAS+C,EACrBJ,EAAoBQ,GACpBN,GAAuB,GACvBN,EAAoB,MACnB,CAACI,EAAqBnB,EAAauB,IAStCxE,qBAAU,WACHwE,GAGLE,MACC,CAACF,EAAkBE,IAEtB,IAAMG,EAAuBtB,IAAW,iBAAkB,CACxDuB,UAAkC,cAAvB7B,EAAYxB,OACvBsD,QAAgC,YAAvB9B,EAAYxB,OACrBuD,QAAgC,YAAvB/B,EAAYxB,SAGjBwD,EAAsB1B,IAAW,gBAAiB,CACtD2B,UACEjC,EAAYpB,uBAAyBoB,EAAYlB,qBACnDoD,WACElC,EAAYpB,uBAAyBoB,EAAYlB,uBAGrD,OACE,sBAAKzD,UAAU,UAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,6BAAK2E,EAAY5B,QACjB,qBAAK/C,UAAU,iBAAf,SACE,qBACEA,UAAU,yBACVO,QAAS,kBAAMgF,GAAmB,IAFpC,sBAOF,qBAAKvF,UAAU,2BAAf,SACI+F,EAQA,cAAC,EAAD,CAAgBL,oBAAqBA,IAPrC,qBACE1F,UAAWuG,EACXhG,QAAS,kBAAMyF,GAAwBD,IAFzC,SAIGpB,EAAYxB,cAOrB,sBAAKnD,UAAU,0BAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,mBAAGA,UAAU,0BACb,8BAAM6B,EAAKZ,WAEb,sBAAKjB,UAAU,eAAf,UACE,mBAAGA,UAAU,uBACb,8BAAM2E,EAAYtB,oBAGtB,sBAAKrD,UAAU,eAAf,UACE,qBAAKA,UAAU,eAAf,SACE,4BAAI2E,EAAY1B,gBAElB,sBAAKjD,UAAU,2BAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,0DACA,6BAAK2E,EAAYpB,4BAEnB,sBAAKvD,UAAW2G,EAAhB,UACE,uDACA,6BAAKhC,EAAYlB,mCAKzB,cAAC,EAAD,CACEoB,uBAhFyB,WAC7B,IAAMiC,EAAczC,IAChBiC,EAAc3B,EAClB2B,EAAYtC,SAAS8C,GAAeX,EACpCL,EAAoBQ,IA6EhB3B,YAAaA,EACbC,4BAA6BA,IAE9BqB,GACC,cAAC,EAAD,CACET,yBAA0BA,EAC1BD,mBAAoBA,EACpBZ,YAAaA,QC/FRoC,G,MArBQ,SAAC,GAKjB,IAJLC,EAII,EAJJA,cACAnB,EAGI,EAHJA,aACAC,EAEI,EAFJA,oBACAN,EACI,EADJA,yBAEA,OACE,qBAAKxF,UAAU,6BAAf,SACGgH,EAAc9C,KAAI,SAAC0B,GAAD,OACjB,cAAC,EAAD,CACEA,QAASA,EAETC,aAAcA,EACdC,oBAAqBA,EACrBN,yBAA0BA,GAHrBI,UCXAqB,EAFSxG,0BCQTyG,EARa,SAACrF,GAC3B,OAAOxC,EACJuB,WAAW,SACXC,IAAIgB,EAAKC,KACTlB,WAAW,YACXC,IAAI,mBCEMsG,EARW,SAACtF,GACzB,OAAOxC,EACJuB,WAAW,SACXC,IAAIgB,EAAKC,KACTlB,WAAW,YACXC,IAAI,iBCKMuG,EATe,SAACvF,EAAMwF,GACnChI,EACGuB,WAAW,SACXC,IAAIgB,EAAKC,KACTlB,WAAW,YACXC,IAAI,kBACJC,IAAI,CAAEuG,wBCGIC,EATa,SAACzF,EAAM0F,GACjClI,EACGuB,WAAW,SACXC,IAAIgB,EAAKC,KACTlB,WAAW,YACXC,IAAI,gBACJC,IAAIyG,IC6EMC,EA3EF,SAAC,GAAc,IAAZ3F,EAAW,EAAXA,KAAW,EACuBb,oBAAS,GADhC,mBAClBwB,EADkB,KACAC,EADA,OAWrBpB,qBAAW4F,GAPbpB,EAJuB,EAIvBA,aACA4B,EALuB,EAKvBA,eACAC,EANuB,EAMvBA,+BACAC,EAPuB,EAOvBA,6BACAC,EARuB,EAQvBA,kBACAC,EATuB,EASvBA,cACAC,EAVuB,EAUvBA,cAGFpG,qBAAU,WACRyF,EAAkBtF,GAAMkG,YAAW,SAAClH,GAClC8G,EAA6B9G,EAAImH,WAGnCd,EAAoBrF,GAAMkG,YAAW,SAAClH,GAC/BA,EAAImH,OAAOX,oBAGhBK,EAA+B7G,EAAImH,OAAOX,yBAE3C,CAACxF,IAEJH,qBAAU,WACJ+F,EAAeQ,OAAS,GAC1Bb,EAAsBvF,EAAM4F,GAG1B5B,GACFyB,EAAoBzF,EAAMgE,KAE3B,CAAChE,EAAM4F,EAAgB5B,IAiB1B,OACE,sBAAK7F,UAAU,iBAAf,UACE,cAAC,EAAD,CACEyC,oBAAqBA,EACrBD,iBAAkBA,IAEnBA,GACC,cAAC,EAAD,CACEM,6BAvB6B,SAAC8C,GACpCgC,EAAkBhC,IAuBZnD,oBAAqBA,IAGxBgF,EAAeQ,OAAS,IAA0B,IAArBzF,GAC5B,cAAC,EAAD,CACEwE,cAAeS,EACf5B,aAAcA,EACdC,oBA3BoB,SAACoC,GAC3BJ,EAAcI,IA2BR1C,yBAxByB,SAACI,GACF,IAA1B6B,EAAeQ,QACjBb,EAAsBvF,EAAM,IAE9BgG,EAAcjC,UC1DLuC,EAAuB,uBACvBC,EAAkB,kBAClBC,EAAiB,iB,QCyBfC,EArBe,SAACC,EAAOC,GAEpC,OAAQA,EAAOtI,MACb,KAAKiI,EACH,OAAOK,EAAOC,QAEhB,KAAKL,EAEH,MADY,sBAAOG,GAAP,CAAcC,EAAOC,QAAQ1F,QAG3C,KAAKsF,EAIH,OAHeE,EAAMG,QACnB,SAACzJ,GAAD,OAAeA,IAAcuJ,EAAOC,QAAQ1F,SAIhD,QACE,OAAOwF,ICdEI,EATuB,SAACC,EAAchD,GACnD,OAAOT,OAAO0D,KAAKD,GAAcE,QAAO,SAACC,EAAKC,GAI5C,OAHIA,IAAQpD,IACVmD,EAAIC,GAAOJ,EAAaI,IAEnBD,IACN,KCuBUE,EAtBoB,SAACV,EAAOC,GACzC,OAAQA,EAAOtI,MACb,KAAKiI,EACH,OAAOK,EAAOC,QAEhB,KAAKL,EACH,IAAMc,EAAgB,eAAQX,GAE9B,OADAW,EAAiBV,EAAOC,QAAQ1F,OAASyF,EAAOC,QACzCS,EAET,KAAKb,EAKH,OAJ0CM,EACxCJ,EACAC,EAAOC,QAAQ1F,OAInB,QACE,OAAOwF,IC4DEY,EA3EO,SAACC,GACrB,IAD+B,EAIcC,qBAC3CJ,EAH+B,MAFF,mBAIxBpD,EAJwB,KAIVyD,EAJU,OAQkBD,qBAC/Cf,EARiC,IADJ,mBAQxBb,EARwB,KAQR8B,EARQ,KA0D/B,OACE,cAAC,EAAgBC,SAAjB,CACElJ,MAAO,CACLuF,eACA4B,iBACAC,+BAlDiC,SAAC+B,GACtCF,EAAuB,CACrBrJ,KAAMiI,EACNM,QAASgB,KAgDP9B,6BA5C+B,SAAC/B,GACpC0D,EAAqB,CACnBpJ,KAAMiI,EACNM,QAAS7C,KA0CPgC,kBAtCoB,SAAChC,GACzB2D,EAAuB,CACrBrJ,KAAMkI,EACNK,QAAS7C,IAGX0D,EAAqB,CACnBpJ,KAAMkI,EACNK,QAAS7C,KA+BPiC,cApBgB,SAACjC,GACrB0D,EAAqB,CACnBpJ,KAAMmI,EACNI,QAAS7C,IAGX2D,EAAuB,CACrBrJ,KAAMmI,EACNI,QAAS7C,KAaPkC,cA5BgB,SAACI,GACrBoB,EAAqB,CACnBpJ,KAAMkI,EACNK,QAASP,MAiBX,SAWGkB,EAAMM,YCzDEC,MAhBf,WAAgB,IACN9H,EAASR,qBAAWC,GAApBO,KAER,OACE,qBAAK7B,UAAU,MAAf,SACI6B,EAGA,cAAC,EAAD,UACE,cAAC,EAAD,CAAMA,KAAMA,MAHd,cAAC,EAAD,CAAMA,KAAMA,OCbP+H,EAAoB,oBACpBC,EAAc,cCYZC,EAXK,SAACvB,EAAOC,GAC1B,OAAQA,EAAOtI,MACb,KAAK0J,EACH,OAAOpB,EAAOC,QAChB,KAAKoB,EACH,MAAO,GACT,QACE,OAAOtB,IC4BEwB,EAhCG,SAACX,GACjB,IAD2B,EAGDC,qBAAWS,EAFjB,IADO,mBAGpBvB,EAHoB,KAGbyB,EAHa,KAmB3B,OACE,cAAC,EAAYR,SAAb,CACElJ,MAAO,CACLuB,KAAM0G,EACNhH,gBAlBkB,SAACM,GACvBmI,EAAS,CACP9J,KAAM0J,EACNnB,QAAS5G,KAgBPL,WAZa,WACjBwI,EAAS,CACP9J,KAAM2J,EACNpB,QAAS,OAKX,SAOGW,EAAMM,YC1BbO,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.51b12ccc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/firebase-auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBdnw2H0Cu4__EMWrEEWuNMZq6hHMoNfgo\",\r\n  authDomain: \"lexop-test.firebaseapp.com\",\r\n  databaseURL: \"https://lexop-test-default-rtdb.firebaseio.com\",\r\n  projectId: \"lexop-test\",\r\n  storageBucket: \"lexop-test.appspot.com\",\r\n  messagingSenderId: \"357862369053\",\r\n  appId: \"1:357862369053:web:e7fa7532b705230a5423f4\",\r\n};\r\n\r\nexport const fire = firebase.initializeApp(firebaseConfig);\r\n\r\nconst database = firebase.firestore();\r\n\r\nexport default database;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = ({\r\n  hasAccount,\r\n  setHasAccount,\r\n  setEmail,\r\n  setPassword,\r\n  emailError,\r\n  passwordError,\r\n  handleSignUp,\r\n  handleLogin,\r\n}) => {\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <div className=\"login\">\r\n          {hasAccount ? <h2>Sign In</h2> : <h2>Sign Up</h2>}\r\n\r\n          <input\r\n            placeholder=\"email\"\r\n            type=\"text\"\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n          {emailError && <p>Error Email Message</p>}\r\n\r\n          <input\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n          {passwordError && <p>Error Password Message</p>}\r\n\r\n          {hasAccount ? (\r\n            <div className=\"signin-container\">\r\n              <div className=\"login-btn btn\" onClick={() => handleLogin()}>\r\n                Sign In\r\n              </div>\r\n              <div className=\"has-account\">\r\n                <p>Do you need an account?</p>\r\n                <div onClick={() => setHasAccount(false)}>Register</div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"signin-container\">\r\n              <div className=\"login-btn btn\" onClick={() => handleSignUp()}>\r\n                Sign Up\r\n              </div>\r\n              <div className=\"has-account\">\r\n                <p>Already has an account?</p>\r\n                <div onClick={() => setHasAccount(true)}>Sign In </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { createContext } from \"react\";\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;\r\n","import database from \"../firebase\";\r\n\r\nconst setDefaultFoldersToFB = (userId) => {\r\n  database\r\n    .collection(\"users\")\r\n    .doc(userId)\r\n    .collection(\"userData\")\r\n    .doc(\"projectsInfo\")\r\n    .set({});\r\n  database\r\n    .collection(\"users\")\r\n    .doc(userId)\r\n    .collection(\"userData\")\r\n    .doc(\"listOfProjects\")\r\n    .set({});\r\n};\r\n\r\nexport default setDefaultFoldersToFB;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { fire } from \"../../core/firebase\";\r\nimport Login from \"./Login\";\r\nimport AuthContext from \"../../context/auth-context/auth-context\";\r\nimport setDefaultFoldersToFB from \"../../core/setToFBFunctions/setDefaultFoldersToFB\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  const [hasAccount, setHasAccount] = useState(false);\r\n\r\n  const { setLoggedInUser, logoutUser } = useContext(AuthContext);\r\n\r\n  const clearAllInputs = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setEmailError(\"\");\r\n    setPasswordError(\"\");\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    clearErrors();\r\n    fire\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    clearErrors();\r\n    fire\r\n      .auth()\r\n\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        setDefaultFoldersToFB(result.user.uid);\r\n      })\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/email-already-in-use\":\r\n          case \"auth/invalid-email\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/weak-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const removeEventListener = fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        clearAllInputs();\r\n        setLoggedInUser({\r\n          email: user.email,\r\n          uid: user.uid,\r\n        });\r\n      } else {\r\n        logoutUser();\r\n      }\r\n    });\r\n\r\n    return removeEventListener;\r\n  }, [setLoggedInUser, logoutUser]);\r\n\r\n  return (\r\n    <Login\r\n      hasAccount={hasAccount}\r\n      setHasAccount={setHasAccount}\r\n      setEmail={setEmail}\r\n      setPassword={setPassword}\r\n      handleSignUp={handleSignUp}\r\n      handleLogin={handleLogin}\r\n      emailError={emailError}\r\n      passwordError={passwordError}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Nav.css\";\r\nimport { fire } from \"../../core/firebase\";\r\nimport AuthContext from \"../../context/auth-context/auth-context\";\r\n\r\nconst Nav = ({ createNewProject, setCreateNewProject, setUser }) => {\r\n  const { logoutUser } = useContext(AuthContext);\r\n\r\n  const handleLogOut = () => {\r\n    fire.auth().signOut();\r\n    logoutUser();\r\n  };\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className=\"nav-container-left\">\r\n        <h2> Home Improvement</h2>\r\n        <div\r\n          className=\"new-project-btn btn\"\r\n          onClick={() => setCreateNewProject(!createNewProject)}\r\n        >\r\n          New Project\r\n        </div>\r\n      </div>\r\n      <div className=\"nav-container-right\">\r\n        <div className=\"logout-btn btn\" onClick={handleLogOut}>\r\n          Logout\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","export const listOfStatuses = [\"Created\", \"Started\", \"Stopped\", \"Completed\"];\r\n","import React, { useState } from \"react\";\r\nimport \"./CreateNewProject.css\";\r\nimport { listOfStatuses } from \"../../../core/listOfStatuses\";\r\n\r\nconst CreateNewProject = ({\r\n  handleAddProjectToListSubmit,\r\n  setCreateNewProject,\r\n}) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [dateCreated, setDateCreated] = useState(null);\r\n  const [estimatedLevelOfEfford, setEstimatedLevelOfEfford] = useState(null);\r\n  const [currentLevelOfEfford, setCurrentLevelOfEfford] = useState(null);\r\n\r\n  const clearAllInputs = () => {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setStatus(\"\");\r\n    setDateCreated(null);\r\n    setEstimatedLevelOfEfford(null);\r\n    setCurrentLevelOfEfford(null);\r\n  };\r\n\r\n  const submitUserInputs = (event) => {\r\n    event.preventDefault();\r\n    const projectId = Math.floor(Math.random() * 1000);\r\n    const newProject = {\r\n      title,\r\n      description,\r\n      status,\r\n      dateCreated,\r\n      estimatedLevelOfEfford,\r\n      currentLevelOfEfford,\r\n      projectId,\r\n      comments: {},\r\n    };\r\n    handleAddProjectToListSubmit(newProject);\r\n    clearAllInputs();\r\n    setCreateNewProject(false);\r\n  };\r\n  return (\r\n    <div className=\"create-project-container\">\r\n      <h2>Create New Project</h2>\r\n\r\n      <form\r\n        className=\"create-project-form\"\r\n        onSubmit={(event) => submitUserInputs(event.target.value)}\r\n      >\r\n        <div className=\"inputs-container\">\r\n          <div className=\"left-side-inputs\">\r\n            <input\r\n              className=\"create-project-input\"\r\n              placeholder=\"Title\"\r\n              onChange={(event) => setTitle(event.target.value)}\r\n            />\r\n            <input\r\n              className=\"create-project-input\"\r\n              type=\"date\"\r\n              onChange={(event) => setDateCreated(event.target.value)}\r\n            />\r\n            <input\r\n              className=\"create-project-input\"\r\n              placeholder=\"estimated effort\"\r\n              type=\"number\"\r\n              onChange={(event) =>\r\n                setEstimatedLevelOfEfford(event.target.value)\r\n              }\r\n            />\r\n            <input\r\n              className=\"create-project-input\"\r\n              placeholder=\"current effort\"\r\n              type=\"number\"\r\n              onChange={(event) => setCurrentLevelOfEfford(event.target.value)}\r\n            />\r\n            <select\r\n              className=\"selector\"\r\n              onChange={(event) => setStatus(event.target.value)}\r\n            >\r\n              <option value=\"\">-- Project Status -- </option>\r\n              {listOfStatuses.map((status) => (\r\n                <option key={status + 1} value={status}>\r\n                  {status}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"right-side-inputs\">\r\n            <textarea\r\n              rows=\"24\"\r\n              cols=\"46\"\r\n              placeholder=\"Description\"\r\n              onChange={(event) => setDescription(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"submit-btn btn\" onClick={submitUserInputs}>\r\n          Submit\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateNewProject;\r\n","const getCurrentCommentTime = () => {\r\n  return new Date()\r\n    .toISOString()\r\n    .slice(0, 19)\r\n    .replace(/-/g, \"/\")\r\n    .replace(\"T\", \" \");\r\n};\r\n\r\nexport default getCurrentCommentTime;\r\n","import React, { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./Comments.css\";\r\n\r\nconst Comments = ({\r\n  projectInfo,\r\n  setNewCommentInProjectInput,\r\n  addNewCommentToProject,\r\n}) => {\r\n  const [showComments, setShowComments] = useState(false);\r\n\r\n  const arrowClasses = classNames(\r\n    \"open-comments-icon\",\r\n    \"fas\",\r\n    \"fa-chevron-down\",\r\n    {\r\n      commentsOpened: showComments,\r\n    }\r\n  );\r\n\r\n  let comments = Object.entries(projectInfo.comments).map((CommentsArr) => {\r\n    return (\r\n      <div className=\"comment-info\" key={CommentsArr[0]}>\r\n        <div className=\"comment-date\">\r\n          <p>{CommentsArr[0]}</p>\r\n        </div>\r\n        <div className=\"comment-text\">\r\n          <p>{CommentsArr[1]}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"project-comments-container\">\r\n      <div className=\"project-comments-header\">\r\n        <h3>Comments</h3>\r\n        <div\r\n          className=\"open-comments-icon\"\r\n          onClick={() => setShowComments(!showComments)}\r\n        >\r\n          <i className={arrowClasses} />\r\n        </div>\r\n      </div>\r\n      {showComments && (\r\n        <div className=\"project-comments\">\r\n          <div className=\"comments-header\">\r\n            <h4>Date</h4>\r\n            <h4>Comment:</h4>\r\n          </div>\r\n\r\n          {comments}\r\n\r\n          <div className=\"new-comment-input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Add new comment here\"\r\n              onChange={(event) =>\r\n                setNewCommentInProjectInput(event.target.value)\r\n              }\r\n            />\r\n            <div\r\n              className=\" btn add-comment-btn\"\r\n              onClick={addNewCommentToProject}\r\n            >\r\n              Add comment\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport \"./DeleteProjectModal.css\";\r\n\r\nconst DeleteProjectModal = ({\r\n  setShowDeleteModal,\r\n  handleDeleteProjectClick,\r\n  projectInfo,\r\n}) => {\r\n  return (\r\n    <div className=\"black-layout\">\r\n      <div className=\"delete-modal\">\r\n        <h3>A you sure you want do delete {projectInfo.title}?</h3>\r\n        <div className=\"confim-btns-container\">\r\n          <div\r\n            onClick={() => handleDeleteProjectClick(projectInfo)}\r\n            className=\"yes-btn btn\"\r\n          >\r\n            {\" \"}\r\n            Yes{\" \"}\r\n          </div>\r\n          <div onClick={() => setShowDeleteModal(false)} className=\"no-btn btn\">\r\n            No\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteProjectModal;\r\n","import React from \"react\";\r\nimport { listOfStatuses } from \"../../core/listOfStatuses\";\r\n\r\nconst StatusSelector = ({ setNewProjectStatus }) => {\r\n  return (\r\n    <div className=\"status-selector\">\r\n      {listOfStatuses.map((status) => (\r\n        <div\r\n          className=\"project-status\"\r\n          onClick={() => setNewProjectStatus(status)}\r\n          key={status}\r\n        >\r\n          {status}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusSelector;\r\n","import React, { useCallback, useEffect, useState, useContext } from \"react\";\r\nimport \"./Project.css\";\r\nimport classNames from \"classnames\";\r\nimport getCurrentCommentTime from \"../../../core/getCurrentCommentTime\";\r\nimport Comments from \"../Comments/Comments\";\r\nimport DeleteProjectModal from \"./DeleteProjectModal\";\r\nimport StatusSelector from \"../StatusSelector\";\r\nimport AuthContext from \"../../../context/auth-context/auth-context\";\r\n\r\nconst Project = ({\r\n  project,\r\n  projectsById,\r\n  handleUpdateProject,\r\n  handleDeleteProjectClick,\r\n}) => {\r\n  const [changeProjectStatus, setChangeProjectStatus] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [newProjectStatus, setNewProjectStatus] = useState(\"\");\r\n  const [newCommentInProjectInput, setNewCommentInProjectInput] = useState(\"\");\r\n\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const projectInfo = projectsById[project];\r\n\r\n  const handleUpdateProjectStatus = useCallback(() => {\r\n    let projectCopy = { ...projectInfo };\r\n    projectCopy.status = newProjectStatus;\r\n    handleUpdateProject(projectCopy);\r\n    setChangeProjectStatus(false);\r\n    setNewProjectStatus(\"\");\r\n  }, [handleUpdateProject, projectInfo, newProjectStatus]);\r\n\r\n  const addNewCommentToProject = () => {\r\n    const commentTime = getCurrentCommentTime();\r\n    let projectCopy = projectInfo;\r\n    projectCopy.comments[commentTime] = newCommentInProjectInput;\r\n    handleUpdateProject(projectCopy);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!newProjectStatus) {\r\n      return;\r\n    }\r\n    handleUpdateProjectStatus();\r\n  }, [newProjectStatus, handleUpdateProjectStatus]);\r\n\r\n  const projectStatusClasses = classNames(\"project-status\", {\r\n    completed: projectInfo.status === \"Completed\",\r\n    stopped: projectInfo.status === \"Stopped\",\r\n    started: projectInfo.status === \"Started\",\r\n  });\r\n\r\n  const actualEffortClasses = classNames(\"actual-effort\", {\r\n    lowEffort:\r\n      projectInfo.estimatedLevelOfEfford > projectInfo.currentLevelOfEfford,\r\n    highEffort:\r\n      projectInfo.estimatedLevelOfEfford < projectInfo.currentLevelOfEfford,\r\n  });\r\n\r\n  return (\r\n    <div className=\"project\">\r\n      <div className=\"project-header\">\r\n        <h2>{projectInfo.title}</h2>\r\n        <div className=\"delete-project\">\r\n          <div\r\n            className=\"delete-project-btn btn\"\r\n            onClick={() => setShowDeleteModal(true)}\r\n          >\r\n            Delete\r\n          </div>\r\n        </div>\r\n        <div className=\"project-status-container\">\r\n          {!changeProjectStatus ? (\r\n            <div\r\n              className={projectStatusClasses}\r\n              onClick={() => setChangeProjectStatus(!changeProjectStatus)}\r\n            >\r\n              {projectInfo.status}\r\n            </div>\r\n          ) : (\r\n            <StatusSelector setNewProjectStatus={setNewProjectStatus} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"project-basic-container\">\r\n        <div className=\"project-author-container\">\r\n          <div className=\"project-author\">\r\n            <i className=\"icons fas fa-user-alt\" />\r\n            <div>{user.email}</div>\r\n          </div>\r\n          <div className=\"project-date\">\r\n            <i className=\"icons far fa-clock\" />\r\n            <div>{projectInfo.dateCreated}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"project-info\">\r\n          <div className=\"project-text\">\r\n            <p>{projectInfo.description}</p>\r\n          </div>\r\n          <div className=\"project-effort-container\">\r\n            <div className=\"estimates-effort\">\r\n              <p>Estimated level of effort</p>\r\n              <h2>{projectInfo.estimatedLevelOfEfford}</h2>\r\n            </div>\r\n            <div className={actualEffortClasses}>\r\n              <p>Actual level of effort</p>\r\n              <h2>{projectInfo.currentLevelOfEfford}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Comments\r\n        addNewCommentToProject={addNewCommentToProject}\r\n        projectInfo={projectInfo}\r\n        setNewCommentInProjectInput={setNewCommentInProjectInput}\r\n      />\r\n      {showDeleteModal && (\r\n        <DeleteProjectModal\r\n          handleDeleteProjectClick={handleDeleteProjectClick}\r\n          setShowDeleteModal={setShowDeleteModal}\r\n          projectInfo={projectInfo}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React from \"react\";\r\nimport Project from \"./Project\";\r\nimport \"./ListOfProjects.css\";\r\n\r\nconst ListOfProjects = ({\r\n  projectAllIds,\r\n  projectsById,\r\n  handleUpdateProject,\r\n  handleDeleteProjectClick,\r\n}) => {\r\n  return (\r\n    <div className=\"list-of-projects-container\">\r\n      {projectAllIds.map((project) => (\r\n        <Project\r\n          project={project}\r\n          key={project}\r\n          projectsById={projectsById}\r\n          handleUpdateProject={handleUpdateProject}\r\n          handleDeleteProjectClick={handleDeleteProjectClick}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfProjects;\r\n","import { createContext } from \"react\";\r\n\r\nconst projectsContext = createContext();\r\n\r\nexport default projectsContext;\r\n","import database from \"../firebase\";\r\n\r\nconst fetchProjectsAllIds = (user) => {\r\n  return database\r\n    .collection(\"users\")\r\n    .doc(user.uid)\r\n    .collection(\"userData\")\r\n    .doc(\"listOfProjects\");\r\n};\r\n\r\nexport default fetchProjectsAllIds;\r\n","import database from \"../firebase\";\r\nconst fetchProjectsById = (user) => {\r\n  return database\r\n    .collection(\"users\")\r\n    .doc(user.uid)\r\n    .collection(\"userData\")\r\n    .doc(\"projectsInfo\");\r\n};\r\n\r\nexport default fetchProjectsById;\r\n","import database from \"../firebase\";\r\n\r\nconst setProjectsAllIdsToFB = (user, projectsAllIdsList) => {\r\n  database\r\n    .collection(\"users\")\r\n    .doc(user.uid)\r\n    .collection(\"userData\")\r\n    .doc(\"listOfProjects\")\r\n    .set({ projectsAllIdsList });\r\n};\r\n\r\nexport default setProjectsAllIdsToFB;\r\n","import database from \"../firebase\";\r\n\r\nconst setProjectsByIdToFB = (user, listOfProjectsById) => {\r\n  database\r\n    .collection(\"users\")\r\n    .doc(user.uid)\r\n    .collection(\"userData\")\r\n    .doc(\"projectsInfo\")\r\n    .set(listOfProjectsById);\r\n};\r\n\r\nexport default setProjectsByIdToFB;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Nav from \"../Nav/Nav\";\r\nimport CreateNewProject from \"./CreateNewProject/CreateNewProject\";\r\nimport ListOfProjects from \"./Projects/ListOfProjects\";\r\nimport projectsContext from \"../../context/projects-context/projects-context\";\r\nimport fetchProjectsAllIds from \"../../core/getFromFBFunctions/fetchProjectsAllIdsFromFB\";\r\nimport fetchProjectsById from \"../../core/getFromFBFunctions/fetchProjectsByIdsFromFB\";\r\nimport setProjectsAllIdsToFB from \"../../core/setToFBFunctions/setProjectsAllIdsToFB\";\r\nimport setProjectsByIdToFB from \"../../core/setToFBFunctions/setProjectsByIdsToFB\";\r\n\r\nconst Main = ({ user }) => {\r\n  const [createNewProject, setCreateNewProject] = useState(false);\r\n\r\n  const {\r\n    projectsById,\r\n    projectsAllIds,\r\n    setProjectsAllIdsFromFBtoState,\r\n    setProjectsByIdFromFBtoState,\r\n    addProjectToState,\r\n    deleteProject,\r\n    updateProject,\r\n  } = useContext(projectsContext);\r\n\r\n  useEffect(() => {\r\n    fetchProjectsById(user).onSnapshot((doc) => {\r\n      setProjectsByIdFromFBtoState(doc.data());\r\n    });\r\n\r\n    fetchProjectsAllIds(user).onSnapshot((doc) => {\r\n      if (!doc.data().projectsAllIdsList) {\r\n        return;\r\n      }\r\n      setProjectsAllIdsFromFBtoState(doc.data().projectsAllIdsList);\r\n    });\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (projectsAllIds.length > 0) {\r\n      setProjectsAllIdsToFB(user, projectsAllIds);\r\n    }\r\n\r\n    if (projectsById) {\r\n      setProjectsByIdToFB(user, projectsById);\r\n    }\r\n  }, [user, projectsAllIds, projectsById]);\r\n\r\n  const handleAddProjectToListSubmit = (project) => {\r\n    addProjectToState(project);\r\n  };\r\n\r\n  const handleUpdateProject = (updatedProject) => {\r\n    updateProject(updatedProject);\r\n  };\r\n\r\n  const handleDeleteProjectClick = (project) => {\r\n    if (projectsAllIds.length === 1) {\r\n      setProjectsAllIdsToFB(user, []);\r\n    }\r\n    deleteProject(project);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <Nav\r\n        setCreateNewProject={setCreateNewProject}\r\n        createNewProject={createNewProject}\r\n      />\r\n      {createNewProject && (\r\n        <CreateNewProject\r\n          handleAddProjectToListSubmit={handleAddProjectToListSubmit}\r\n          setCreateNewProject={setCreateNewProject}\r\n        />\r\n      )}\r\n      {projectsAllIds.length > 0 && createNewProject === false && (\r\n        <ListOfProjects\r\n          projectAllIds={projectsAllIds}\r\n          projectsById={projectsById}\r\n          handleUpdateProject={handleUpdateProject}\r\n          handleDeleteProjectClick={handleDeleteProjectClick}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","export const SET_PROJECTS_FROM_FB = \"SET_PROJECTS_FROM_FB\";\r\nexport const ADD_NEW_PROJECT = \"ADD_NEW_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n","import {\r\n  SET_PROJECTS_FROM_FB,\r\n  ADD_NEW_PROJECT,\r\n  DELETE_PROJECT,\r\n} from \"./projects-actions\";\r\n\r\nconst projectsAllIdsReducer = (state, action) => {\r\n  let updatedState;\r\n  switch (action.type) {\r\n    case SET_PROJECTS_FROM_FB:\r\n      return action.payload;\r\n\r\n    case ADD_NEW_PROJECT:\r\n      updatedState = [...state, action.payload.title];\r\n      return updatedState;\r\n\r\n    case DELETE_PROJECT:\r\n      updatedState = state.filter(\r\n        (projectId) => projectId !== action.payload.title\r\n      );\r\n      return updatedState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectsAllIdsReducer;\r\n","const deleteSelectedJobInfoFromList = (projectsList, project) => {\r\n  return Object.keys(projectsList).reduce((obj, key) => {\r\n    if (key !== project) {\r\n      obj[key] = projectsList[key];\r\n    }\r\n    return obj;\r\n  }, {});\r\n};\r\n\r\nexport default deleteSelectedJobInfoFromList;\r\n","import {\r\n  SET_PROJECTS_FROM_FB,\r\n  ADD_NEW_PROJECT,\r\n  DELETE_PROJECT,\r\n} from \"./projects-actions\";\r\nimport deleteSelectedJobInfoFromList from \"../../core/deleteSelectedProjectFromList\";\r\n\r\nexport const projectsByIdReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_PROJECTS_FROM_FB:\r\n      return action.payload;\r\n\r\n    case ADD_NEW_PROJECT:\r\n      const projectsByIdCopy = { ...state };\r\n      projectsByIdCopy[action.payload.title] = action.payload;\r\n      return projectsByIdCopy;\r\n\r\n    case DELETE_PROJECT:\r\n      const projectsByIdWithoutDeletedCompany = deleteSelectedJobInfoFromList(\r\n        state,\r\n        action.payload.title\r\n      );\r\n      return projectsByIdWithoutDeletedCompany;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectsByIdReducer;\r\n","import React, { useReducer } from \"react\";\r\nimport {\r\n  SET_PROJECTS_FROM_FB,\r\n  ADD_NEW_PROJECT,\r\n  DELETE_PROJECT,\r\n} from \"./projects-actions\";\r\nimport ProjectsContext from \"./projects-context\";\r\nimport projectsAllIdsReducer from \"./projectsAllIds-reducer\";\r\nimport projectsByIdReducer from \"./projectsById-reducer\";\r\n\r\nconst ProjectsState = (props) => {\r\n  const initialProjectsAllIdsState = [];\r\n  const initialProjectsByIdState = null;\r\n\r\n  const [projectsById, dispatchProjectsById] = useReducer(\r\n    projectsByIdReducer,\r\n    initialProjectsByIdState\r\n  );\r\n  const [projectsAllIds, dispatchProjectsAllIds] = useReducer(\r\n    projectsAllIdsReducer,\r\n    initialProjectsAllIdsState\r\n  );\r\n\r\n  const setProjectsAllIdsFromFBtoState = (projectsIds) => {\r\n    dispatchProjectsAllIds({\r\n      type: SET_PROJECTS_FROM_FB,\r\n      payload: projectsIds,\r\n    });\r\n  };\r\n\r\n  const setProjectsByIdFromFBtoState = (project) => {\r\n    dispatchProjectsById({\r\n      type: SET_PROJECTS_FROM_FB,\r\n      payload: project,\r\n    });\r\n  };\r\n\r\n  const addProjectToState = (project) => {\r\n    dispatchProjectsAllIds({\r\n      type: ADD_NEW_PROJECT,\r\n      payload: project,\r\n    });\r\n\r\n    dispatchProjectsById({\r\n      type: ADD_NEW_PROJECT,\r\n      payload: project,\r\n    });\r\n  };\r\n\r\n  const updateProject = (updatedProject) => {\r\n    dispatchProjectsById({\r\n      type: ADD_NEW_PROJECT,\r\n      payload: updatedProject,\r\n    });\r\n  };\r\n\r\n  const deleteProject = (project) => {\r\n    dispatchProjectsById({\r\n      type: DELETE_PROJECT,\r\n      payload: project,\r\n    });\r\n\r\n    dispatchProjectsAllIds({\r\n      type: DELETE_PROJECT,\r\n      payload: project,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ProjectsContext.Provider\r\n      value={{\r\n        projectsById,\r\n        projectsAllIds,\r\n        setProjectsAllIdsFromFBtoState,\r\n        setProjectsByIdFromFBtoState,\r\n        addProjectToState,\r\n        deleteProject,\r\n        updateProject,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProjectsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProjectsState;\r\n","import { useContext } from \"react\";\nimport \"./App.css\";\nimport Auth from \"./components/Auth/Auth\";\nimport Main from \"./components/Main/Main\";\nimport AuthContext from \"./context/auth-context/auth-context\";\nimport ProjectsState from \"./context/projects-context/ProjectsState\";\n\nfunction App() {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <div className=\"App\">\n      {!user ? (\n        <Auth user={user} />\n      ) : (\n        <ProjectsState>\n          <Main user={user} />\n        </ProjectsState>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","export const SET_LOGGEDIN_USER = \"SET_LOGGEDIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\n","import { SET_LOGGEDIN_USER, LOGOUT_USER } from \"./auth-actions\";\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_LOGGEDIN_USER:\r\n      return action.payload;\r\n    case LOGOUT_USER:\r\n      return \"\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React, { useReducer } from \"react\";\r\nimport AuthContext from \"./auth-context\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport { SET_LOGGEDIN_USER, LOGOUT_USER } from \"./auth-actions\";\r\n\r\nconst AuthState = (props) => {\r\n  const initialUser = \"\";\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialUser);\r\n\r\n  const setLoggedInUser = (user) => {\r\n    dispatch({\r\n      type: SET_LOGGEDIN_USER,\r\n      payload: user,\r\n    });\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    dispatch({\r\n      type: LOGOUT_USER,\r\n      payload: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state,\r\n        setLoggedInUser,\r\n        logoutUser,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport AuthState from \"./context/auth-context/AuthState\";\n\nReactDOM.render(\n  <AuthState>\n    <App />\n  </AuthState>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}